(def life (w h unbearable (o space (@[w X] (h nil))) (o cnt 0))
     (def make-being (x y (o mood 0) (o age 0))
          (and (< 0 x w)
               (< 0 y h)
               (no space.y.x)
               (space.y.x = [if (mood * ++.age < -.unbearable) (space.y.x = nil)
                              (or (make-being (x - 1) y)
                                  (make-being (x + 1) y)
                                  (make-being x (y + 1))
                                  (make-being x (y - 1))) (++ mood)
                              (-- mood)])))
     (pr "\033[2J")
     (make-being 1 1)
     (while (space @@[and Being (Being)] @@[if no.H "   " gt_0.H " â˜» " " â˜¹ "] @$prn)
            (sleep .05)
            (prn "\nFrame " (++ cnt) "\033[0;0H")))

(life 30 30 5)
